name: 多平台镜像同步（空格分隔版）

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 配置Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录镜像仓库
        run: |
          docker login docker.cnb.cool -u cnb -p ${{ secrets.cnb }}

      - name: 同步多平台镜像
        run: |
          set -eo pipefail
          
          docker buildx create --name img_sync --use
          docker buildx inspect --bootstrap

          while IFS= read -r line; do
            [[ "$line" =~ ^#|^$ ]] && continue

            # 解析输入行（格式：源镜像 目标镜像 平台1 平台2 ...）
            src_image=$(echo "$line" | awk '{print $1}')
            dest_image=$(echo "$line" | awk '{print $2}')
            
            # 提取平台参数（跳过前两列，剩余的都是平台）
            platforms=$(echo "$line" | awk '{for(i=3;i<=NF;i++) printf "%s%s", (i>3?",":""), "linux/"$i}')
            
            echo "🔍 正在处理: $src_image => $dest_image [平台: $platforms]"

            # 方法1：使用buildx同步（推荐）
            echo "🚀 使用buildx同步多平台镜像..."
            docker buildx build \
              --platform "$platforms" \
              --output=type=image,name=$dest_image,push=true \
              --cache-from=type=registry,ref=$src_image \
              - <<< "FROM $src_image"

            echo "🎉 同步成功: $dest_image"
            echo "----------------------------------------"
          done < "$GITHUB_WORKSPACE/images.txt"

          docker buildx rm img_sync || true